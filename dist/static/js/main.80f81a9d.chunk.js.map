{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/games/GameSummary.js","components/games/GameList.js","components/dashboard/Dashboard.js","components/games/GameDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/games/CreateGame.js","store/actions/gameActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/gameReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","profile","react_default","a","createElement","id","className","NavLink","to","onClick","Link","initial","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifications","map","item","key","content","result","moment","time","toDate","fromNow","GameSummary","_ref","game","p1_score","p2_score","p1_name","p2_name","referee_name","createdAt","calendar","GameList","games","games_GameSummary","Dashboard","_this$props","this","components_games_GameList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","toString","location","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","authErrorMessage","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","name","level","club","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","user","set","CreateGame","referee","date","createGame","history","push","defaultValue","referee_id","add","objectSpread","whowin","p1_id","p2_id","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","GameDetails","Boolean","window","hostname","initState","authReducer","arguments","length","undefined","action","message","gameReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.80f81a9d.chunk.js","sourcesContent":["import React from 'react'\r\nimport {NavLink, Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signOut} from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) =>{\r\n    const {profile} = props;\r\n    return(\r\n        <div>\r\n            <ul id=\"nav-desktop\" className=\"right hide-on-small-only\">\r\n                <li><NavLink to='/create'><i className=\"material-icons\">add</i></NavLink></li>\r\n                <li><NavLink to='/'>전광판</NavLink></li>\r\n                <li><NavLink to='/'>전적</NavLink></li>\r\n                <li><a onClick={props.signOut}>로그아웃</a></li>\r\n                <li><Link to='/profile' className='btn btn-floating blue btn-flat white-text'>{profile.initial}</Link></li>\r\n\r\n                \r\n            </ul>\r\n            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-up\">\r\n                <li><NavLink to='/create'><i className=\"material-icons\">add</i></NavLink></li>\r\n                <li><NavLink to='/'><i className=\"material-icons\">dashboard</i></NavLink></li>\r\n                <li><NavLink to='/'><i className=\"material-icons\">assignment</i></NavLink></li>\r\n                <li><a onClick={props.signOut}><i className=\"material-icons\">logout</i></a></li>\r\n                <li><Link to='/profile' className='btn btn-floating blue btn-flat white-text'>{profile.initial}</Link></li>\r\n\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) =>{\r\n    return (dispatch, getState, {getFirebase}) =>{\r\n        const firebase = getFirebase();\r\n        //로그인 요청\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password,\r\n        ).then(()=>{\r\n            dispatch({type: 'LOGIN_SUCCESS'})\r\n        }).catch((err)=>{\r\n            dispatch({type: 'LOGIN_ERROR',err})\r\n        });\r\n\r\n    }\r\n}\r\n\r\nexport const signOut =  () =>{\r\n    return (dispatch, getState, {getFirebase}) =>{\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({type: 'LOGOUT_SUCCESS'});\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) =>{\r\n    return (dispatch, getState, {getFirebase, getFirestore}) =>{\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp)=>{\r\n            //add()는 doc을 추가하면서 key값을 firestore에서 자동으로 할당하는 것, doc()은 id를 직접 지정하는것\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                name: newUser.name,\r\n                level: newUser.level,\r\n                club: newUser.club,\r\n                initial: newUser.name[1],\r\n            })\r\n        }).then(()=>{\r\n            dispatch({type: 'SIGNUP_SUCCESS'});\r\n        }).catch( err =>{\r\n            dispatch({type: 'SIGNUP_ERROR',err})\r\n        });\r\n  \r\n    }\r\n\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nconst SignedOutLinks = () =>{\r\n    return(\r\n        <div>\r\n            <ul id=\"nav-desktop\" className=\"right hide-on-small-only\">\r\n                <li><NavLink to='/'>전광판</NavLink></li>\r\n                <li><NavLink to='/'>랭킹</NavLink></li>\r\n                <li><NavLink to='/signin'>로그인</NavLink></li>\r\n                <li><NavLink to='/signup'>회원가입</NavLink></li>\r\n\r\n            </ul>\r\n            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-up\">\r\n                <li><NavLink to='/'><i className=\"material-icons\">dashboard</i></NavLink></li>\r\n                <li><NavLink to='/'><i className=\"material-icons\">view_list</i></NavLink></li>\r\n                <li><NavLink to='/signin'>로그인</NavLink></li>\r\n                <li><NavLink to='/signup'>회원가입</NavLink></li>\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport {connect} from 'react-redux'\r\n\r\nconst Navbar = (props) =>{\r\n    const {auth, profile} = props;\r\n    //console.log(auth);\r\n    const links = auth.uid ? <SignedInLinks profile={profile}/> :<SignedOutLinks/>;\r\n    return(\r\n        <nav className=\"nav wrapper blue darken-4\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo left\">랭퐁</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    console.log(state);\r\n    return{\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Navbar); ","import React from 'react'\r\nimport moment from 'moment'\r\nconst Notifications = (props) =>{\r\n    const {notifications} = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map( item =>{\r\n                            return(\r\n                                <li key={item.id}>\r\n                                    <p className=\"pink-text\">{item.content}</p>\r\n                                    <p>{item.result}</p>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Notifications;","import React from 'react'\r\nimport './GameList.css';\r\nimport moment from 'moment'\r\n\r\nconst GameSummary = ({game})=>{\r\n    return(\r\n        <div className=\"card z-depth-0 game-summary\">\r\n                <div className=\"card-content grey-text text-darken-3\">\r\n                    <div className=\"card-title\">\r\n                        <div className=\"row center-align\">\r\n                            <h3 className=\"col s5 m3 offset-m2 \">{game.p1_score}</h3>\r\n                            <h3 className=\"col s2 m0 \">:</h3>                 \r\n                            <h3 className=\"col s5 m3\">{game.p2_score}</h3>\r\n                        </div>\r\n                        <div className=\"row center-align\">\r\n                            <h6 className=\"col s5 m3 offset-m2 center-align\">{game.p1_name}</h6>\r\n                            <h6 className=\"col s2 m0 \"></h6>\r\n                            <h6 className=\"col s5 m3 center-align\">{game.p2_name}</h6>   \r\n                        </div>\r\n                    </div>    \r\n                    <p className=\"center-align\">{game.referee_name}에 의해 생성됨</p>\r\n                    <p className='grey-text center-align'>{moment(game.createdAt.toDate()).calendar()}</p>\r\n                </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\nexport  default GameSummary;","import React from 'react'\r\nimport GameSummary from './GameSummary'\r\nimport {Link} from 'react-router-dom'\r\nimport './GameList.css';\r\n// Dashboard에서 전달된 games 데이터를 받아온다.\r\nconst GameList = ({games}) =>{\r\n    return(\r\n        <div className=\"game-list section\">\r\n            {/* 배열을 순회하면서 맵핑시킨다. */}\r\n            {games && games.map(game=>{\r\n                return (\r\n                    <Link to={'/game/'+game.id} key={game.id}>\r\n                    <GameSummary game={game} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default GameList;","import React, {Component} from 'react'\r\nimport Notifications from './Notifications'\r\nimport GameList from '../games/GameList'\r\n// app.js에 store객체로 저장된 store리덕스에 접근하기 위해서 필요한 connect 함수\r\n// Dashboard에서 데이터에 접근해서 gameList에 뿌려줘야 한다. 왜냐하면 list를 뿌려주는 것은 클래스 컴포넌트가 아니고 함수형이기 때문이다. 복잡한건 클래스 컴포넌트에서 모두 해야한다.\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\n// 데이터를 가져오려면 Async(비동기적 방식)으로 데이터베이스에 접근해야한다. 그렇게 하기 위해서는 컴포넌트의 생명주기를 적절히 이용하여 네트워크로 인한 데이터 로딩시간을 적절하게 줄일 필요가 있다.\r\n\r\n\r\nclass Dashboard extends  Component {\r\n    render(){\r\n\r\n        const {games, auth, notifications} = this.props;\r\n        // route guarding\r\n        if(!auth.uid) return <Redirect to='/signin'/>\r\n\r\n        return(\r\n        <div className=\"dashboard container\">\r\n            <div className=\"row\">\r\n                <div className=\"col s12 m6\">\r\n                    <GameList games={games}/>\r\n                </div>\r\n                <div className=\"col s12 m5 offset-m1\">\r\n                    <Notifications notifications={notifications}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )}\r\n\r\n}\r\n// store 리덕스에 접근해서 이를 Dashboard에 props로 넘겨주기위해 connect의 인자로 필요한 함수.(이름도 미리 정해져 있음)\r\nconst mapStateToProps = (state) =>{\r\n    //여기서 state는 redux의 state이다.\r\n    //console.log(state); state객체에는 redux에 등록된 reducer들과 그 상태가 들어있음.\r\n\r\n    return{\r\n        games: state.firestore.ordered.games,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications,\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        // 어떤 collection을 연결할지 설정        \r\n        { collection: 'games',orderBy:['createdAt','desc']},\r\n        {collection: 'notifications', limit:5, orderBy:['time','desc']}\r\n    ])\r\n)(Dashboard);","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport moment from 'moment'\r\nconst GameDetails = (props) =>{\r\n\r\n    const {game,auth,id} = props;\r\n    console.log(game);\r\n    if(!auth.uid) return <Redirect to='/signin'/>\r\n\r\n    if(game){\r\n        return (\r\n            <div className=\"container section game-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <div className=\"card-title\">\r\n                            <div className=\"row center-align\">\r\n                                <h3 className=\"col s5 m5 l5\">{game.p1_score}</h3>\r\n                                <h3 className=\"col s2 m2 l2\">:</h3>                 \r\n                                <h3 className=\"col s5 m5 l5\">{game.p2_score}</h3>\r\n                            </div>\r\n                            <div className=\"row center-align\">\r\n                                <h6 className=\"col s5 m5 center-align\">{game.p1_name}</h6>\r\n                                <h6 className=\"col s2 m2 \"></h6>\r\n                                <h6 className=\"col s5 m5 center-align\">{game.p2_name}</h6>   \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-action grey lighten-4 grey-text\">\r\n                            <div>게임번호: {id}</div>\r\n                            <div className='grey-text left-align'>{game.createdAt.toString()}</div>\r\n                            <div>탁구장 위치: {game.location}</div>\r\n                            <div>심판: {game.referee_name}</div>\r\n                            <div>{moment(game.createdAt.toDate()).calendar()}에 생성됨</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }else{\r\n        return(\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n\r\n}\r\n//ownProps를 이용하면 props에 접근이 가능하다.\r\nconst mapStateToProps = (state, ownProps) =>{\r\n    const id =  ownProps.match.params.id;\r\n    const games = state.firestore.data.games;\r\n    const game = games? games[id] : null;\r\n    return{\r\n        game: game,\r\n        auth: state.firebase.auth,\r\n        id: id\r\n\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection:'games'}\r\n    ])\r\n)(GameDetails);","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {signIn} from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n\r\n    state={\r\n        email:'',\r\n        password:'',\r\n\r\n    }\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n\r\n    render(){\r\n        const {authError,authErrorMessage,auth} = this.props;\r\n        if(auth.uid) return <Redirect to='/'/>\r\n        //console.log(authErrorMessage);\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">로그인</h5>\r\n                    <h3></h3>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">이메일</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">패스워드</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn blue darken-4 z-depth-0\">로그인</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p>:null}\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n// auth state에 접근하기 위한 코드\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        signIn: (creds)=>dispatch(signIn(creds)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {signUp} from '../../store/actions/authActions'\r\nclass SignUp extends Component {\r\n\r\n    state={\r\n        email:'',\r\n        password:'',\r\n        name:'',\r\n        level:'',\r\n        club:','\r\n\r\n    }\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.signUp(this.state);\r\n    }\r\n\r\n    render(){\r\n        const {auth, authError} = this.props;\r\n        if(auth.uid) return <Redirect to='/'/>\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">회원가입</h5>\r\n                    <h3></h3>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"name\">이름</label>\r\n                        <input type=\"text\" id=\"name\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">이메일</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">패스워드</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"level\">부수</label>\r\n                        <input type=\"number\" id=\"level\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"club\">탁구장</label>\r\n                        <input type=\"text\" id=\"club\" onChange={this.handleChange}/>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn blue darken-4 z-depth-0\">회원가입</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p>: null }\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp);","import React, {Component} from 'react'\r\nimport {createGame} from '../../store/actions/gameActions'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass CreateGame extends Component {\r\n\r\n    state={\r\n        p1_name:'',\r\n        p1_score:0,\r\n        p2_name:'',\r\n        p2_score:0,\r\n        referee:'',\r\n        date:'',\r\n        location:'',\r\n\r\n    }\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.createGame(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render(){\r\n        // Route Gaurding\r\n        const {auth} = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin'/>\r\n\r\n        return(\r\n            <div className=\"container create-game\">\r\n                <h3 className='center-align'>경기 기록</h3>\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                        <div className=\"row center-align valign-wrapper\">\r\n                             <div className=\"input-field col s5 m5 l5\">\r\n                                <select id=\"p1_score\" className=\"browser-default\" onChange={this.handleChange}>\r\n                                    <option value=\"0\" defaultValue>0</option>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                </select>\r\n                             </div>\r\n                            \r\n                            <h3 className=\"col s2 m2 l2\">:</h3>                 \r\n                            <div className=\"input-field col s5 m5 l5\">\r\n                                <select  id=\"p2_score\" className=\"browser-default\" onChange={this.handleChange}>\r\n                                    <option value=\"0\" defaultValue>0</option>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                </select>\r\n                             </div>\r\n                        </div>\r\n                        <div className=\"row center-align\">\r\n                            <div className=\"input-field col s5 m5 center-align\">\r\n                                <label htmlFor=\"p1_name\">player1</label>\r\n                                <input type=\"text\" id=\"p1_name\" onChange={this.handleChange}/>\r\n                            </div>\r\n                            <h6 className=\"col s2 m2 \"></h6>\r\n                            <div className=\"input-field col s5 m5 center-align\">\r\n                                <label htmlFor=\"p2_name\">player2</label>\r\n                             <input type=\"text\" id=\"p2_name\" onChange={this.handleChange}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"input-field center-align\">\r\n                            <button className=\"btn blue darken-4 z-depth-0\">확인</button>\r\n                        </div>\r\n                </form>\r\n \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        createGame: (game)=> dispatch(createGame(game))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateGame);","import GameSummary from \"../../components/games/GameSummary\";\r\n\r\n// Normal Action Creator\r\n/*export const createGame = (game) =>{\r\n    return{\r\n        type: 'ADD_GAME',\r\n        game: game,\r\n    }\r\n}*/\r\n//using thunk\r\nexport const createGame = (game) =>{\r\n    return (dispatch, getState,{getFirebase, getFirestore})=>{\r\n        //make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const referee_id = getState().firebase.auth.uid;\r\n        //async task\r\n        firestore.collection('games').add({\r\n            ...game,\r\n            whowin: false,\r\n            referee_id: referee_id,\r\n            referee_name: profile.name,\r\n            p1_id : game.p1_name,\r\n            p2_id : game.p2_name,\r\n            createdAt: new Date(), \r\n        }).then(() =>{\r\n            dispatch({ type:'CREATE_GAME',game,});\r\n        }).catch((err)=>{\r\n            dispatch({type:'CREATE_GAME_ERROR', err})\r\n        });\r\n        \r\n    }\r\n}","import React, { Component } from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport GameDetails from './components/games/GameDetails'\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateGame from './components/games/CreateGame';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar></Navbar>\n\n          <Switch>\n            <Route exact path='/' component={Dashboard}/>\n            <Route path='/game/:id' component={GameDetails}/>\n            <Route path='/signin' component={SignIn}/>\n            <Route path='/signup' component={SignUp}/>\n            <Route path='/create' component={CreateGame}/>\n\n          </Switch>          \n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) =>{\r\n\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed',\r\n                authErrorMessage: action.err\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return{\r\n                ...state,\r\n                authError: null,\r\n                authErrorMessage: null\r\n            }\r\n        case 'LOGOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n        \r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return{\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error');\r\n            return{\r\n                ...state,\r\n                authError: action.err.message,\r\n            }\r\n\r\n        \r\n        default:\r\n            return state;        \r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n    games:[\r\n        {id:1, p1_score:3, p2_score:2, p1_name:'김영주', p2_name:'붕어빵'},\r\n        {id:2, p1_score:3, p2_score:0, p1_name:'고구마', p2_name:'감자'},\r\n        {id:3, p1_score:2, p2_score:3, p1_name:'감자', p2_name:'오이'},\r\n        {id:4, p1_score:1, p2_score:3, p1_name:'배추', p2_name:'당근'},\r\n\r\n    ]\r\n\r\n}\r\n\r\nconst gameReducer = (state = initState, action) =>{\r\n    switch(action.type){\r\n        case 'CREATE_GAME':\r\n            //console.log('created game', action.game);\r\n            return state;\r\n\r\n        case 'CREATE_GAME_ERROR':\r\n            //console.log('create game error', action.err)\r\n            return state\r\n        default:\r\n            return state;    \r\n    }\r\n    \r\n}\r\n\r\nexport default gameReducer;","import authReducer from './authReducer'\r\nimport gameReducer from './gameReducer'\r\nimport {combineReducers} from 'redux'\r\n// firestore와 redux를 동기화해주는 pre-made Reducer\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n\r\n// 여러개의 리듀서를 하나의 루트 리듀서로 만든다.\r\n//firestore 리듀서는 store에 데이터가 바뀌면 자동으로 redux를 업데이트 한다.\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    game: gameReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyAlP6zYhvjzPIGsj2FYeYvLMw5D3IoqBMo\",\r\n    authDomain: \"react-rankpong.firebaseapp.com\",\r\n    databaseURL: \"https://react-rankpong.firebaseio.com\",\r\n    projectId: \"react-rankpong\",\r\n    storageBucket: \"react-rankpong.appspot.com\",\r\n    messagingSenderId: \"271586261523\"\r\n  };\r\n\r\n  \r\n  firebase.initializeApp(config);\r\n  firebase.firestore().settings({timestampsInSnapshots:true});\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\n// store 객체를 App.js에 전달해주기 위해서 react-redux의 Provider 라는 glue 객체\nimport {Provider} from 'react-redux'\n//redux thunk는 dispatch를 하였을 때 비동기 방식으로 데이터를 가져온 뒤에 리듀서를 호출하기 위해 필요한 미들웨어 라이브러리이다.\nimport thunk from 'redux-thunk'\n// redux-firestore는 firestore와 redux, react-redux-firebase는 firebase전체와 redux를 위한 라이브러리\nimport {reduxFirestore, getFirestore} from 'redux-firestore'\nimport {reactReduxFirebase,getFirebase} from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\n\n//create rootReducer, thunk에 extra 데이터로 getFirestore와 getFirebase를 전달\nconst store = createStore(rootReducer,\n    //여러개의 enhancer를 묶기위한 compose 함수\n    compose(\n        //return enhancer\n        applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\n        // config file을 넣어주어서 actionCreator가 firebase와 저장소에 접근할 수 있도록 한다.\n        reduxFirestore(fbConfig),\n        // firebase가 인증을 완료했을 때 attach를 하여 렌더링을 하기 위해서 . attachAuthIsReady : ture 옵션을 넘겨준다., firestore에 있는 profile을  firebase에 auth와 sync 한다. userProfile에 profile이 담길 doc이름을 value로 지정한다.\n        // firebase.profile과 firestore.user과 연동을 위한 옵션\n        reactReduxFirebase(fbConfig,{useFirestoreForProfile:true, userProfile:'users', attachAuthIsReady:true})\n        )\n    );\n\n// Don't render to the DOM until firebase is ready\nstore.firebaseAuthIsReady.then(()=>{\n    ReactDOM.render(<Provider store={store}><App /></Provider> , document.getElementById('root'));\n\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: http://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n    \n}); \n"],"sourceRoot":""}