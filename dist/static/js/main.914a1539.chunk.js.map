{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/games/GameSummary.js","components/games/GameList.js","components/rankings/TotalRanking.js","components/dashboard/Dashboard.js","components/games/GameDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/games/CreateGame.js","store/actions/gameActions.js","components/history/History.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/gameReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","profile","react_default","a","createElement","id","className","NavLink","to","onClick","Link","initial","SignedOutLinks","state","console","log","firebase","links","uid","components_layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifications","map","item","key","content","result","moment","time","toDate","fromNow","GameSummary","_ref","game","p1_score","p2_score","p1_name","p2_name","referee_name","createdAt","calendar","GameList","games","games_GameSummary","TotalRankings","Dashboard","_this$props","this","rankings_TotalRanking","dashboard_Notifications","Component","compose","firestore","ordered","firestoreConnect","collection","limit","orderBy","ownProps","match","params","data","toString","location","Redirect","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","authErrorMessage","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","name","level","club","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","user","set","props_flag","options","loadOptions1","inputValue","callback","setTimeout","filterNames","loadOptions2","filter","i","label","includes","CreateGame","p1_id","p2_id","referee","date","selectedOption1","selectedOption2","handleChange1","selectedOption","handleChange2","createGame","history","push","handleInputChange1","newValue","handleInputChange2","nextProps","users","forEach","element","_this$state","defaultValue","Async_default","loadOptions","defaultOptions","cacheOptions","onInputChange","isSearchable","referee_id","add","objectSpread","whowin","Date","History","components_games_GameList","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","GameDetails","Histroy","Boolean","window","hostname","initState","authReducer","arguments","length","undefined","action","message","gameReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.914a1539.chunk.js","sourcesContent":["import React from 'react'\r\nimport {NavLink, Link} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signOut} from '../../store/actions/authActions'\r\nimport './SignedInLinks.css'\r\n\r\nconst SignedInLinks = (props) =>{\r\n    const {profile} = props;\r\n    return(\r\n        <div>\r\n            <ul id=\"nav-desktop\" className=\"right hide-on-small-only\">\r\n                <li><NavLink to='/create'><i className=\"material-icons\">add</i></NavLink></li>\r\n                <li><NavLink to='/'>전광판</NavLink></li>\r\n                <li><NavLink to='/history'>전적</NavLink></li>\r\n                <li><a onClick={props.signOut}>로그아웃</a></li>\r\n                <li><Link to='/profile' className='btn btn-floating red  lighten-3 btn-flat white-text'>{profile.initial}</Link></li>\r\n\r\n                \r\n            </ul>\r\n            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-up\">\r\n                <li><NavLink to='/create'><i className=\"material-icons\">add</i></NavLink></li>\r\n                <li><NavLink to='/'><i className=\"material-icons\">dashboard</i></NavLink></li>\r\n                <li><NavLink to='/history'><i className=\"material-icons\">assignment</i></NavLink></li>\r\n                <li><a onClick={props.signOut}><i className=\"material-icons\">logout</i></a></li>\r\n                <li><Link to='/profile' className='btn btn-floating red lighten-3 btn-flat white-text'>{profile.initial}</Link></li>\r\n\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) =>{\r\n    return (dispatch, getState, {getFirebase}) =>{\r\n        const firebase = getFirebase();\r\n        //로그인 요청\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password,\r\n        ).then(()=>{\r\n            dispatch({type: 'LOGIN_SUCCESS'})\r\n        }).catch((err)=>{\r\n            dispatch({type: 'LOGIN_ERROR',err})\r\n        });\r\n\r\n    }\r\n}\r\n\r\nexport const signOut =  () =>{\r\n    return (dispatch, getState, {getFirebase}) =>{\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({type: 'LOGOUT_SUCCESS'});\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) =>{\r\n    return (dispatch, getState, {getFirebase, getFirestore}) =>{\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp)=>{\r\n            //add()는 doc을 추가하면서 key값을 firestore에서 자동으로 할당하는 것, doc()은 id를 직접 지정하는것\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                name: newUser.name,\r\n                level: newUser.level,\r\n                club: newUser.club,\r\n                initial: newUser.name[1],\r\n            })\r\n        }).then(()=>{\r\n            dispatch({type: 'SIGNUP_SUCCESS'});\r\n        }).catch( err =>{\r\n            dispatch({type: 'SIGNUP_ERROR',err})\r\n        });\r\n  \r\n    }\r\n\r\n}","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nconst SignedOutLinks = () =>{\r\n    return(\r\n        <div>\r\n            <ul id=\"nav-desktop\" className=\"right hide-on-small-only\">\r\n                <li><NavLink to='/'>전광판</NavLink></li>\r\n                <li><NavLink to='/signin'>로그인</NavLink></li>\r\n                <li><NavLink to='/signup'>회원가입</NavLink></li>\r\n\r\n            </ul>\r\n            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-up\">\r\n                <li><NavLink to='/'><i className=\"material-icons\">dashboard</i></NavLink></li>\r\n                <li><NavLink to='/signin'>로그인</NavLink></li>\r\n                <li><NavLink to='/signup'>회원가입</NavLink></li>\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport {connect} from 'react-redux'\r\n\r\nconst Navbar = (props) =>{\r\n    const {auth, profile} = props;\r\n    //console.log(auth);\r\n    const links = auth.uid ? <SignedInLinks profile={profile}/> :<SignedOutLinks/>;\r\n    return(\r\n        <nav className=\"nav wrapper red lighten-2 z-depth-0\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo left white-text\">랭킹핑퐁</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    console.log(state);\r\n    return{\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Navbar); ","import React from 'react'\r\nimport moment from 'moment'\r\nconst Notifications = (props) =>{\r\n    const {notifications} = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map( item =>{\r\n                            return(\r\n                                <li key={item.id}>\r\n                                    <p className=\"pink-text\">{item.content}</p>\r\n                                    <p>{item.result}</p>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Notifications;","import React from 'react'\r\nimport './GameList.css';\r\nimport moment from 'moment'\r\n\r\nconst GameSummary = ({game})=>{\r\n    return(\r\n        <div className=\"card  game-summary\">\r\n                <div className=\"card-content grey-text text-darken-3\">\r\n                    <div className=\"card-title\">\r\n                        <div className=\"row center-align\">\r\n                            <h3 className=\"col s5 m3 offset-m2 \">{game.p1_score}</h3>\r\n                            <h3 className=\"col s2 m0 \">:</h3>                 \r\n                            <h3 className=\"col s5 m3\">{game.p2_score}</h3>\r\n                        </div>\r\n                        <div className=\"row center-align\">\r\n                            <h6 className=\"col s5 m3 offset-m2 center-align\">{game.p1_name}</h6>\r\n                            <h6 className=\"col s2 m0 \"></h6>\r\n                            <h6 className=\"col s5 m3 center-align\">{game.p2_name}</h6>   \r\n                        </div>\r\n                    </div>    \r\n                    <p className=\"center-align\">{game.referee_name}에 의해 생성됨</p>\r\n                    <p className='grey-text center-align'>{moment(game.createdAt.toDate()).calendar()}</p>\r\n                </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\nexport  default GameSummary;","import React from 'react'\r\nimport GameSummary from './GameSummary'\r\nimport {Link} from 'react-router-dom'\r\nimport './GameList.css';\r\n// Dashboard에서 전달된 games 데이터를 받아온다.\r\nconst GameList = ({games}) =>{\r\n    return(\r\n        <div className=\"game-list section\">\r\n            {/* 배열을 순회하면서 맵핑시킨다. */}\r\n            {games && games.map(game=>{\r\n                return (\r\n                    <Link to={'/game/'+game.id} key={game.id}>\r\n                    <GameSummary game={game} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default GameList;","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './TotalRanking.css'\r\n// Dashboard에서 전달된 rankings 데이터를 받아온다.\r\nconst TotalRankings = () =>{\r\n    return(\r\n        <table className=\"highlight centered\">\r\n            <thead>\r\n            <tr>\r\n                <th>순위</th>\r\n                <th>이름</th>\r\n                <th>구장</th>\r\n                <th>레이팅</th>\r\n                \r\n            </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n                <tr>\r\n                    <th>1</th>\r\n                    <td>김영주</td>\r\n                    <td>한국항공대</td>\r\n                    <td>2500</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>2</th>\r\n                    <td>김영주</td>\r\n                    <td>한국항공대</td>\r\n                    <td>2500</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>3</th>\r\n                    <td>김영주</td>\r\n                    <td>한국항공대</td>\r\n                    <td>2500</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>4</th>\r\n                    <td>김영주</td>\r\n                    <td>한국항공대</td>\r\n                    <td>2500</td>\r\n                </tr>\r\n\r\n            </tbody>\r\n      </table>\r\n            \r\n    )\r\n\r\n}\r\n\r\nexport default TotalRankings;","import React, {Component} from 'react'\r\nimport Notifications from './Notifications'\r\nimport GameList from '../games/GameList'\r\n// app.js에 store객체로 저장된 store리덕스에 접근하기 위해서 필요한 connect 함수\r\n// Dashboard에서 데이터에 접근해서 gameList에 뿌려줘야 한다. 왜냐하면 list를 뿌려주는 것은 클래스 컴포넌트가 아니고 함수형이기 때문이다. 복잡한건 클래스 컴포넌트에서 모두 해야한다.\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport TotalRankings from '../rankings/TotalRanking';\r\n// 데이터를 가져오려면 Async(비동기적 방식)으로 데이터베이스에 접근해야한다. 그렇게 하기 위해서는 컴포넌트의 생명주기를 적절히 이용하여 네트워크로 인한 데이터 로딩시간을 적절하게 줄일 필요가 있다.\r\n\r\n\r\nclass Dashboard extends  Component {\r\n    render(){\r\n\r\n        const { auth, notifications} = this.props;\r\n        // route guarding\r\n        //if(!auth.uid) return <Redirect to='/signin'/>\r\n\r\n        return(\r\n        <div className=\"dashboard container\">\r\n            <h3 className='center-align'>전광판</h3>\r\n            <div className=\"row\">\r\n                <div className=\"col s12 m6\">\r\n                    <TotalRankings/>\r\n                </div> \r\n                <div className=\"col s12 m5 offset-m1\">\r\n                    <Notifications notifications={notifications}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )}\r\n\r\n}\r\n// store 리덕스에 접근해서 이를 Dashboard에 props로 넘겨주기위해 connect의 인자로 필요한 함수.(이름도 미리 정해져 있음)\r\nconst mapStateToProps = (state) =>{\r\n    //여기서 state는 redux의 state이다.\r\n    //console.log(state); state객체에는 redux에 등록된 reducer들과 그 상태가 들어있음.\r\n\r\n    return{\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications,\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        // 어떤 collection을 연결할지 설정        \r\n        {collection: 'notifications', limit:5, orderBy:['time','desc']}\r\n    ])\r\n)(Dashboard);","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport moment from 'moment'\r\nconst GameDetails = (props) =>{\r\n\r\n    const {game,auth,id} = props;\r\n    console.log(game);\r\n    if(!auth.uid) return <Redirect to='/signin'/>\r\n\r\n    if(game){\r\n        return (\r\n            <div className=\"container section game-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <div className=\"card-title\">\r\n                            <div className=\"row center-align\">\r\n                                <h3 className=\"col s5 m5 l5\">{game.p1_score}</h3>\r\n                                <h3 className=\"col s2 m2 l2\">:</h3>                 \r\n                                <h3 className=\"col s5 m5 l5\">{game.p2_score}</h3>\r\n                            </div>\r\n                            <div className=\"row center-align\">\r\n                                <h6 className=\"col s5 m5 center-align\">{game.p1_name}</h6>\r\n                                <h6 className=\"col s2 m2 \"></h6>\r\n                                <h6 className=\"col s5 m5 center-align\">{game.p2_name}</h6>   \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-action grey lighten-4 grey-text\">\r\n                            <div>게임번호: {id}</div>\r\n                            <div className='grey-text left-align'>{game.createdAt.toString()}</div>\r\n                            <div>탁구장 위치: {game.location}</div>\r\n                            <div>심판: {game.referee_name}</div>\r\n                            <div>{moment(game.createdAt.toDate()).calendar()}에 생성됨</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }else{\r\n        return(\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n\r\n}\r\n//ownProps를 이용하면 props에 접근이 가능하다.\r\nconst mapStateToProps = (state, ownProps) =>{\r\n    const id =  ownProps.match.params.id;\r\n    const games = state.firestore.data.games;\r\n    const game = games? games[id] : null;\r\n    return{\r\n        game: game,\r\n        auth: state.firebase.auth,\r\n        id: id\r\n\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection:'games'}\r\n    ])\r\n)(GameDetails);","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {signIn} from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\nimport './SignIn.css'\r\nclass SignIn extends Component {\r\n\r\n    state={\r\n        email:'',\r\n        password:'',\r\n\r\n    }\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n\r\n    render(){\r\n        const {authError,authErrorMessage,auth} = this.props;\r\n        if(auth.uid) return <Redirect to='/'/>\r\n        //console.log(authErrorMessage);\r\n\r\n        return(\r\n            <div className=\"signin container\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"row\">\r\n                        <h5 className=\"grey-text text-darken-3 col s12\">로그인</h5>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"input-field col s12\">\r\n                            <label htmlFor=\"email\">이메일</label>\r\n                            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"input-field col s12\">\r\n                            <label htmlFor=\"password\">패스워드</label>\r\n                            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"input-field col s12\">\r\n                            <button className=\"btn red lighten-3\">로그인</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"red-text right col s12\">\r\n                            {authError ? <p>{authError}</p>:null}\r\n                        </div>\r\n                    </div>\r\n                        \r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n// auth state에 접근하기 위한 코드\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        signIn: (creds)=>dispatch(signIn(creds)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {signUp} from '../../store/actions/authActions'\r\nimport './SignIn.css'\r\nclass SignUp extends Component {\r\n\r\n    state={\r\n        email:'',\r\n        password:'',\r\n        name:'',\r\n        level:'',\r\n        club:','\r\n\r\n    }\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.signUp(this.state);\r\n    }\r\n\r\n    render(){\r\n        const {auth, authError} = this.props;\r\n        if(auth.uid) return <Redirect to='/'/>\r\n\r\n        return(\r\n            <div className=\"signup container\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"row\">\r\n                        <h5 className=\"grey-text text-darken-3 col s12\">회원가입</h5>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"name\">이름</label>\r\n                            <input type=\"text\" id=\"name\" onChange={this.handleChange}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"email\">이메일</label>\r\n                            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"password\">패스워드</label>\r\n                            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"level\">부수</label>\r\n                            <input type=\"number\" id=\"level\" onChange={this.handleChange}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"input-field\">\r\n                            <label htmlFor=\"club\">탁구장</label>\r\n                            <input type=\"text\" id=\"club\" onChange={this.handleChange}/>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"row\">\r\n                        <div className=\"input-field\">\r\n                            <button className=\"btn red lighten-3\">회원가입</button>\r\n                        </div>    \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"red-text center\">\r\n                                {authError ? <p>{authError}</p>: null }\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp);","import React, {Component} from 'react'\r\nimport {createGame} from '../../store/actions/gameActions'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport AsyncSelect from 'react-select/lib/Async';\r\nimport './CreateGame.css'\r\n\r\nvar props_flag = true;\r\nvar   options=[\r\n];\r\n\r\nconst loadOptions1 = (inputValue, callback) => {\r\n    setTimeout(() => {\r\n        callback(filterNames(inputValue));\r\n    }, 1000);\r\n    console.log(\"loadOption1 is called\");\r\n  };\r\n  const loadOptions2 = (inputValue, callback) => {\r\n    setTimeout(() => {\r\n      callback(filterNames(inputValue));\r\n    }, 1000);\r\n    console.log(\"loadOption2 is called\");\r\n  };\r\n\r\n  const filterNames = (inputValue) => {\r\n    return options.filter(i =>\r\n      i.label.includes(inputValue)\r\n    );\r\n  };\r\n  \r\n\r\nclass CreateGame extends Component {\r\n\r\n\r\n    state={\r\n        p1_name:'',\r\n        p1_score:0,\r\n        p1_id:'',\r\n        p2_name:'',\r\n        p2_score:0,\r\n        p2_id:'',\r\n        referee:'',\r\n        date:'',\r\n        location:'',\r\n        selectedOption1: null,\r\n        selectedOption2: null,\r\n        inputValue: '',\r\n    }\r\n\r\n\r\n    handleChange = (e) =>{\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n        console.log(\"submit\",this.state);\r\n    }\r\n    handleChange1 = (selectedOption) => {\r\n        console.log(selectedOption);\r\n        this.setState({ p1_name: selectedOption.label, p1_id: selectedOption.value });\r\n    }\r\n    handleChange2 = (selectedOption) => {\r\n        this.setState({ p2_name: selectedOption.label, p2_id: selectedOption.value });\r\n    }\r\n     handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        this.props.createGame(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        console.log(nextProps);\r\n        const {users} = nextProps;\r\n        if(users != null && props_flag){\r\n            users.forEach(element => {\r\n                options.push({value: element.id, label: element.name})\r\n            });\r\n            props_flag = false;\r\n        }\r\n    }\r\n    handleInputChange1 = (newValue) => {\r\n        this.setState({ inputValue: newValue });\r\n        return newValue;\r\n      };\r\n      handleInputChange2 = (newValue) => {\r\n        this.setState({ inputValue: newValue });\r\n        return newValue;\r\n      };\r\n    \r\n    render(){\r\n        // Route Gaurding\r\n        const {auth} = this.props;\r\n        const { selectedOption1,selectedOption2 } = this.state;\r\n\r\n\r\n        if(!auth.uid) return <Redirect to='/signin'/>\r\n        return(\r\n            <div className=\"container create-game\">\r\n                <h3 className='center-align'>경기 기록</h3>\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                        <div className=\"row center-align valign-wrapper\">\r\n                             <div className=\"input-field col s5 m5 l5\">\r\n                                <select id=\"p1_score\" className=\"browser-default\" onChange={this.handleChange}>\r\n                                    <option value=\"0\" defaultValue>0</option>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                </select>\r\n                             </div>\r\n                            \r\n                            <h3 className=\"col s2 m2 l2\">:</h3>                 \r\n                            <div className=\"input-field col s5 m5 l5\">\r\n                                <select  id=\"p2_score\" className=\"browser-default\" onChange={this.handleChange}>\r\n                                    <option value=\"0\" defaultValue>0</option>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                </select>\r\n                             </div>\r\n                        </div>\r\n                        <div className=\"row center-align\">\r\n                            <div className=\"input-field col s5 m5 center-align\">\r\n                                <label htmlFor=\"p1_name\">player1</label>\r\n                                <AsyncSelect\r\n                                    loadOptions={loadOptions1}\r\n                                    defaultOptions\r\n                                    cacheOptions\r\n                                    onInputChange={this.handleInputChange1}\r\n                                    onChange={this.handleChange1}\r\n                                    isSearchable\r\n\r\n                                />\r\n                            </div>\r\n                            <h6 className=\"col s2 m2 \"></h6>\r\n                            <div className=\"input-field col s5 m5 center-align\">\r\n                                <label htmlFor=\"p2_name\">player2</label>\r\n                                <AsyncSelect\r\n                                    loadOptions={loadOptions2}\r\n                                    cacheOptions\r\n                                    defaultOptions\r\n                                    onInputChange={this.handleInputChange2}\r\n                                    onChange={this.handleChange2}\r\n                                    isSearchable\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                        <div className=\"input-field center-align col s12\">\r\n                            <button className=\"btn red lighten-3\">확인</button>\r\n                        </div>\r\n                        </div>\r\n                        \r\n                </form>\r\n \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        auth: state.firebase.auth,\r\n        users: state.firestore.ordered.users,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        createGame: (game)=> dispatch(createGame(game))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    firestoreConnect([\r\n        // 어떤 collection을 연결할지 설정        \r\n        { collection: 'users',orderBy:['name','desc']},\r\n    ])\r\n)(CreateGame);","import GameSummary from \"../../components/games/GameSummary\";\r\n\r\n// Normal Action Creator\r\n/*export const createGame = (game) =>{\r\n    return{\r\n        type: 'ADD_GAME',\r\n        game: game,\r\n    }\r\n}*/\r\n//using thunk\r\nexport const createGame = (game) =>{\r\n    return (dispatch, getState,{getFirebase, getFirestore})=>{\r\n        //make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const referee_id = getState().firebase.auth.uid;\r\n        //async task\r\n        firestore.collection('games').add({\r\n            ...game,\r\n            whowin: false,\r\n            referee_id: referee_id,\r\n            referee_name: profile.name,\r\n            p1_id : game.p1_id,\r\n            p2_id : game.p2_id,\r\n            createdAt: new Date(), \r\n        }).then(() =>{\r\n            dispatch({ type:'CREATE_GAME',game,});\r\n        }).catch((err)=>{\r\n            dispatch({type:'CREATE_GAME_ERROR', err})\r\n        });\r\n        \r\n    }\r\n}","import React, {Component} from 'react'\r\nimport GameList from '../games/GameList'\r\n// app.js에 store객체로 저장된 store리덕스에 접근하기 위해서 필요한 connect 함수\r\n// Dashboard에서 데이터에 접근해서 gameList에 뿌려줘야 한다. 왜냐하면 list를 뿌려주는 것은 클래스 컴포넌트가 아니고 함수형이기 때문이다. 복잡한건 클래스 컴포넌트에서 모두 해야한다.\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\n// 데이터를 가져오려면 Async(비동기적 방식)으로 데이터베이스에 접근해야한다. 그렇게 하기 위해서는 컴포넌트의 생명주기를 적절히 이용하여 네트워크로 인한 데이터 로딩시간을 적절하게 줄일 필요가 있다.\r\n\r\n\r\nclass History extends  Component {\r\n    render(){\r\n\r\n        const {games, auth} = this.props;\r\n        // route guarding\r\n        if(!auth.uid) return <Redirect to='/signin'/>\r\n\r\n        return(\r\n        <div className=\"history container\">\r\n            <GameList games={games}/>\r\n        </div>\r\n        )}\r\n\r\n}\r\n// store 리덕스에 접근해서 이를 Dashboard에 props로 넘겨주기위해 connect의 인자로 필요한 함수.(이름도 미리 정해져 있음)\r\nconst mapStateToProps = (state) =>{\r\n    //여기서 state는 redux의 state이다.\r\n    //console.log(state); state객체에는 redux에 등록된 reducer들과 그 상태가 들어있음.\r\n\r\n    return{\r\n        games: state.firestore.ordered.games,\r\n        auth: state.firebase.auth,\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        // 어떤 collection을 연결할지 설정        \r\n        { collection: 'games',orderBy:['createdAt','desc']},\r\n    ])\r\n)(History);","import React, { Component } from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport GameDetails from './components/games/GameDetails'\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateGame from './components/games/CreateGame';\nimport Histroy from './components/history/History'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar></Navbar>\n\n          <Switch>\n            <Route exact path='/' component={Dashboard}/>\n            <Route path='/game/:id' component={GameDetails}/>\n            <Route path='/signin' component={SignIn}/>\n            <Route path='/signup' component={SignUp}/>\n            <Route path='/create' component={CreateGame}/>\n            <Route path='/history' component={Histroy}/>\n            \n          </Switch>          \n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) =>{\r\n\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed',\r\n                authErrorMessage: action.err\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success');\r\n            return{\r\n                ...state,\r\n                authError: null,\r\n                authErrorMessage: null\r\n            }\r\n        case 'LOGOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n        \r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return{\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error');\r\n            return{\r\n                ...state,\r\n                authError: action.err.message,\r\n            }\r\n\r\n        \r\n        default:\r\n            return state;        \r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n    games:[\r\n        {id:1, p1_score:3, p2_score:2, p1_name:'김영주', p2_name:'붕어빵'},\r\n        {id:2, p1_score:3, p2_score:0, p1_name:'고구마', p2_name:'감자'},\r\n        {id:3, p1_score:2, p2_score:3, p1_name:'감자', p2_name:'오이'},\r\n        {id:4, p1_score:1, p2_score:3, p1_name:'배추', p2_name:'당근'},\r\n\r\n    ]\r\n\r\n}\r\n\r\nconst gameReducer = (state = initState, action) =>{\r\n    switch(action.type){\r\n        case 'CREATE_GAME':\r\n            //console.log('created game', action.game);\r\n            return state;\r\n\r\n        case 'CREATE_GAME_ERROR':\r\n            //console.log('create game error', action.err)\r\n            return state\r\n        default:\r\n            return state;    \r\n    }\r\n    \r\n}\r\n\r\nexport default gameReducer;","import authReducer from './authReducer'\r\nimport gameReducer from './gameReducer'\r\nimport {combineReducers} from 'redux'\r\n// firestore와 redux를 동기화해주는 pre-made Reducer\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n\r\n// 여러개의 리듀서를 하나의 루트 리듀서로 만든다.\r\n//firestore 리듀서는 store에 데이터가 바뀌면 자동으로 redux를 업데이트 한다.\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    game: gameReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyAlP6zYhvjzPIGsj2FYeYvLMw5D3IoqBMo\",\r\n    authDomain: \"react-rankpong.firebaseapp.com\",\r\n    databaseURL: \"https://react-rankpong.firebaseio.com\",\r\n    projectId: \"react-rankpong\",\r\n    storageBucket: \"react-rankpong.appspot.com\",\r\n    messagingSenderId: \"271586261523\"\r\n  };\r\n\r\n  \r\n  firebase.initializeApp(config);\r\n  firebase.firestore().settings({timestampsInSnapshots:true});\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\n// store 객체를 App.js에 전달해주기 위해서 react-redux의 Provider 라는 glue 객체\nimport {Provider} from 'react-redux'\n//redux thunk는 dispatch를 하였을 때 비동기 방식으로 데이터를 가져온 뒤에 리듀서를 호출하기 위해 필요한 미들웨어 라이브러리이다.\nimport thunk from 'redux-thunk'\n// redux-firestore는 firestore와 redux, react-redux-firebase는 firebase전체와 redux를 위한 라이브러리\nimport {reduxFirestore, getFirestore} from 'redux-firestore'\nimport {reactReduxFirebase,getFirebase} from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\n\n//create rootReducer, thunk에 extra 데이터로 getFirestore와 getFirebase를 전달\nconst store = createStore(rootReducer,\n    //여러개의 enhancer를 묶기위한 compose 함수\n    compose(\n        //return enhancer\n        applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\n        // config file을 넣어주어서 actionCreator가 firebase와 저장소에 접근할 수 있도록 한다.\n        reduxFirestore(fbConfig),\n        // firebase가 인증을 완료했을 때 attach를 하여 렌더링을 하기 위해서 . attachAuthIsReady : ture 옵션을 넘겨준다., firestore에 있는 profile을  firebase에 auth와 sync 한다. userProfile에 profile이 담길 doc이름을 value로 지정한다.\n        // firebase.profile과 firestore.user과 연동을 위한 옵션\n        reactReduxFirebase(fbConfig,{useFirestoreForProfile:true, userProfile:'users', attachAuthIsReady:true})\n        )\n    );\n\n// Don't render to the DOM until firebase is ready\nstore.firebaseAuthIsReady.then(()=>{\n    ReactDOM.render(<Provider store={store}><App /></Provider> , document.getElementById('root'));\n\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: http://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n    \n}); \n"],"sourceRoot":""}